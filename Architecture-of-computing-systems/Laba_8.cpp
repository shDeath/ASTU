#include <iostream>

using namespace std;

// -- №1 --

int zadanie1()
{
	// Задание №1
	// Даны два целых числа n и k (n < k). Найти сумму всех чисел от n по k включительно. 

	// -- тестовые значения --
	// для n = 0, k = 100 ожидается ответ 5050
	// для n = 10, k = 20 ожидается ответ 165
	// для n = -20, k = 5 ожидается ответ -195

	int n, k, sum = 0; // объявляем переменные
	cout << "\nАхмедов Шамиль. Лабораторная работа № 13-14. Вариант №4.\n";
	cout << "Введите 2 числа, n и k (n < k): ";
	cin >> n; // ввод значения n
	cin >> k; // ввод значения k

	__asm
	{
		mov eax, n

		mov ecx, eax
		repeat :
		cmp eax, k
			je finish
			inc eax
			add ecx, eax
			jmp repeat

			finish : mov sum, ecx // M = eax
	}

	cout << "Результаты вычислений на Assembler: " << sum << endl;

	// -- здесь вычисления на С++ -- 
	sum = 0;
	for (int i = n; i <= k; sum += i, ++i);

	cout << "Результаты вычислений на C++: " << sum << endl;
	system("pause");
	return 0;
}

// -- №2 --

int zadanie2()
{
	// Задание №2
	// Даны два целых числа n и k (n < k, n > 0). Найти произведение всех  
	// чисел от n по k включительно. 

	// -- тестовые значения --
	// для n = 1, k = 7 ожидается ответ 5040
	// для n = 5, k = 9 ожидается ответ 15120

	int n, k, sum = 1; // объявляем переменные
	cout << "\nАхмедов Шамиль. Лабораторная работа № 13-14. Вариант №4.\n";
	cout << "Введите 2 числа, n и k (n < k): ";
	cin >> n; // ввод значения n
	cin >> k; // ввод значения k

	__asm
	{
		mov eax, n

		mov ecx, eax
		repeat :
		cmp eax, k
			je finish
			inc eax
			imul ecx, eax
			jmp repeat

			finish : mov sum, ecx // M = eax
	}

	cout << "Результаты вычислений на Assembler: " << sum << endl;

	// -- здесь вычисления на С++ -- 
	sum = 1;
	for (int i = n; i <= k; sum *= i, ++i);

	cout << "Результаты вычислений на C++: " << sum << endl;
	system("pause");
	return 0;
}

// -- №3 --

int zadanie3()
{
	// Задание №3
	// Дан массив целых чисел Х (положительные и отрицательные). 
	// Найти сумму квадратов всех чисел.

	// -- тестовые значения --
	// для [1 2 3 4 5 6] ожидается ответ 91
	// для [-1 -2 -3 -8 4 9] ожидается ответ 175

	int x[6], // Объявляем массив
		sum = 0, // Объявляем переменную суммы
		xsize = sizeof(x) / sizeof(int); // вычисление количества элементов массива
	cout << "\nАхмедов Шамиль. Лабораторная работа № 13-14. Вариант №4.\n";
	cout << "Введите " << xsize << " чисел: ";
	for (int i = 0; i < xsize; ++i)
		cin >> x[i];

	__asm
	{
		lea esi, x // загрузка в индексный регистр ESI адрес массива x

		mov eax, 0 // обнуление сумматора EAX
		mov ecx, dword ptr xsize // загрузка в регистр EСX размера массива

		metka :
		mov ebx, [esi] // добавить в EBX следующий элемент массива
			imul ebx, ebx // находим квадрат элемента
			add eax, ebx // добавить в сумматор EAX квадрат элемента

			add esi, 4 // передвигаемся к следующему элементу (+ 4 байта)
			loop metka // переходим на метку ровно ECX раз

			mov dword ptr sum, eax // исчерпаны все элементы массива. 
			// Выгрузка в sum содержимого регистра EAX 

	}

	cout << "Результаты вычислений на Assembler: " << sum << endl;

	// -- здесь вычисления на С++ -- 
	sum = 0;
	for (int i = 0; i < xsize; sum += x[i] * x[i], ++i);

	cout << "Результаты вычислений на C++: " << sum << endl;
	system("pause");
	return 0;
}

// -- №4 --

int zadanie4()
{
	// Задание №4
	// Дан массив целых чисел х (положительные, нулевые и отрицательные).
	// Найти количество отрицательных элементов массива. 

	// -- тестовые значения --
	// для [1 -2 3 -4 5 -6] ожидается ответ 3
	// для [1 2 3 -4 5 6] ожидается ответ 1

	int x[6], // объявляем массив
		sum = 0, // объявляем переменную суммы
		xsize = sizeof(x) / sizeof(int); // вычисление количества элементов массива
	cout << "\nАхмедов Шамиль. Лабораторная работа № 13-14. Вариант №4.\n";
	cout << "Введите " << xsize << " чисел: ";

	for (int i = 0; i < xsize; ++i)
		cin >> x[i];

	__asm
	{
		lea esi, x // загрузка в индексный регистр esi адрес массива x

		mov eax, 0 // обнуление сумматора eax
		mov ecx, dword ptr xsize // загрузка в регистр eсx размера массива

		metka :
		mov ebx, [esi] // добавить в ebx следующий элемент массива
			cmp ebx, 0 // сравниваем элемент массива с 0
			jns next_num // если элемент массива положительный, то переходим на метку next_num
			// если отрицательный, то идём дальше
			inc eax // добавить в сумматор eax единицу

			next_num :
		add esi, 4 // передвигаемся к следующему элементу (+ 4 байта)
			loop metka // переходим на метку ровно ecx раз

			mov dword ptr sum, eax // исчерпаны все элементы массива. выгрузка в sum содержимого регистра eax 
	}

	cout << "Результаты вычислений на Assembler: " << sum << endl;

	// -- здесь вычисления на C++ -- 
	sum = 0;
	for (int i = 0; i < xsize; x[i] < 0 ? ++sum : sum, ++i);

	cout << "Результаты вычислений на C++: " << sum << endl;
	system("pause");
	return 0;
}

// -- №5 --

int zadanie5()
{
	// Задание №5
	// Дан массив целых положительных чисел Х. 
	// Найти максимальный элемент массива.

	// -- тестовые значения --
	// для [1 2 3 4 5 6] ожидается ответ 6
	// для [0 1 3 100 10 80] ожидается ответ 100

	int x[6], // объявляем массив
		sum = 0, // объявляем переменную суммы
		xsize = sizeof(x) / sizeof(int); // вычисление количества элементов массива
	cout << "\nАхмедов Шамиль. Лабораторная работа № 13-14. Вариант №4.\n";
	cout << "Введите " << xsize << " чисел: ";
	for (int i = 0; i < xsize; ++i)
		cin >> x[i];

	__asm
	{
		lea esi, x // загрузка в индексный регистр esi адрес массива x

		mov eax, 0 // обнуление сумматора eax
		mov ecx, dword ptr xsize // загрузка в регистр eсx размера массива

		metka :
		mov ebx, [esi] // добавить в ebx следующий элемент массива
			cmp ebx, eax // сравниваем элемент массива с eax
			jna next_num // если элемент массива меньше eax, то переходим на метку next_num
			// если больше, то идём дальше
			mov eax, ebx // переносим в eax элемент массива

			next_num :
		add esi, 4 // передвигаемся к следующему элементу (+ 4 байта)
			loop metka // переходим на метку ровно ecx раз

			mov dword ptr sum, eax // исчерпаны все элементы массива. выгрузка в sum содержимого регистра eax 

	}

	cout << "Результаты вычислений на Assembler: " << sum << endl;

	// -- здесь вычисления на C++ -- 
	sum = 0;
	for (int i = 0; i < xsize; x[i] > sum ? sum = x[i] : sum, ++i);

	cout << "Результаты вычислений на C++: " << sum << endl;
	system("pause");
	return 0;
}

int main() {
	setlocale(LC_ALL, "Russian");	// установка русского алфавита
	cout << "\nАхмедов Шамиль. Лабораторная работа № 13-14. Вариант №4.\n";
	int choice = -1;
	while (choice != 0)
	{
		cout << R"(
Выбери задание:
1. Задание № 1:
2. задание № 2:
3. задание № 3:
4. задание № 4:
5. задание № 5:
0. Выход
Ввод: )";

		scanf_s("%d", &choice);


		switch (choice)
		{
		case 1:
			zadanie1();
			break;
		case 2:
			zadanie2();
			break;
		case 3:
			zadanie3();
			break;
		case 4:
			zadanie4();
			break;
		case 5:
			zadanie5();
			break;
		case 0:
			exit(0);
		default:
			break;
		}
	}
	system("pause");
	return 0;
}